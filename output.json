{
    "total": 102,
    "documents": [
        {
            "questionText": "Size of large data files can be reduced to save storage disk space. Which algorithm is appropriate to reduce size of large files?",
            "topic": "Data Compression",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Merge sort algorithm\", \"correct\": false, \"explanation\": \"Merge sort is used for sorting data, not for compression.\"}, {\"choiceId\": \"b\", \"text\": \"Huffman encoding algorithm\", \"correct\": true, \"explanation\": \"Huffman encoding is a lossless compression algorithm that reduces file size efficiently.\"}, {\"choiceId\": \"c\", \"text\": \"Heap sort algorithm\", \"correct\": false, \"explanation\": \"Heap sort is a sorting algorithm, not related to file compression.\"}, {\"choiceId\": \"d\", \"text\": \"Prim's algorithm\", \"correct\": false, \"explanation\": \"Prim's algorithm is used for finding minimum spanning trees in graphs, not for compression.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Huffman encoding is the standard algorithm for reducing file size in lossless data compression.\"}",
            "$id": "677446250030687cc033",
            "$createdAt": "2024-12-31T19:29:43.377+00:00",
            "$updatedAt": "2024-12-31T19:29:43.377+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is asynchronous in message communication?",
            "topic": "Message Communication",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Blocking send\", \"correct\": false, \"explanation\": \"Blocking send will halt the execution until a message is sent.\"}, {\"choiceId\": \"b\", \"text\": \"Blocking receive\", \"correct\": false, \"explanation\": \"Blocking receive will halt the execution until a message is received.\"}, {\"choiceId\": \"c\", \"text\": \"Direct message\", \"correct\": false, \"explanation\": \"Direct message is not specific on whether is asynchronous or synchronous, it just means the message is directly sent\"}, {\"choiceId\": \"d\", \"text\": \"Non-block receive\", \"correct\": true, \"explanation\": \"Non-block receive will not wait for a message to be received but will return immediately.\"}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": \"Non-blocking operations allow the sender and receiver to proceed with other tasks without waiting, making it asynchronous.\"}",
            "$id": "6774462e000e22300a39",
            "$createdAt": "2024-12-31T19:29:51.981+00:00",
            "$updatedAt": "2024-12-31T19:29:51.981+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Size of large data files can be reduced to save storage disk space. Which algorithm is appropriate to reduce size of large files?",
            "topic": "Data Compression",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Merge sort algorithm\", \"correct\": false, \"explanation\": \"Merge sort is used for sorting data, not for compression.\"}, {\"choiceId\": \"b\", \"text\": \"Huffman encoding algorithm\", \"correct\": true, \"explanation\": \"Huffman encoding is a lossless compression algorithm that reduces file size efficiently.\"}, {\"choiceId\": \"c\", \"text\": \"Heap sort algorithm\", \"correct\": false, \"explanation\": \"Heap sort is a sorting algorithm, not related to file compression.\"}, {\"choiceId\": \"d\", \"text\": \"Prim's algorithm\", \"correct\": false, \"explanation\": \"Prim's algorithm is used for finding minimum spanning trees in graphs, not for compression.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Huffman encoding is the standard algorithm for reducing file size in lossless data compression.\"}",
            "$id": "6774463500380f1fd512",
            "$createdAt": "2024-12-31T19:29:59.428+00:00",
            "$updatedAt": "2024-12-31T19:29:59.428+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Size of large data files can be reduced to save storage disk space. Which algorithm is appropriate to reduce size of large files?",
            "topic": "Data Compression",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Merge sort algorithm\", \"correct\": false, \"explanation\": \"Merge sort is used for sorting data, not for compression.\"}, {\"choiceId\": \"b\", \"text\": \"Huffman encoding algorithm\", \"correct\": true, \"explanation\": \"Huffman encoding is a lossless compression algorithm that reduces file size efficiently.\"}, {\"choiceId\": \"c\", \"text\": \"Heap sort algorithm\", \"correct\": false, \"explanation\": \"Heap sort is a sorting algorithm, not related to file compression.\"}, {\"choiceId\": \"d\", \"text\": \"Prim's algorithm\", \"correct\": false, \"explanation\": \"Prim's algorithm is used for finding minimum spanning trees in graphs, not for compression.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Huffman encoding is the standard algorithm for reducing file size in lossless data compression.\"}",
            "$id": "6774463d0031e28867f4",
            "$createdAt": "2024-12-31T19:30:07.563+00:00",
            "$updatedAt": "2024-12-31T19:30:07.563+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "A process is terminated by the operating system due to a reference to non-existing memory. Which one of the following best explains the process termination?",
            "topic": "Operating Systems",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Error exit\", \"correct\": false, \"explanation\": \"An error exit can result from various errors not solely non-existing memory\"}, {\"choiceId\": \"b\", \"text\": \"Fatal exit\", \"correct\": true, \"explanation\": \"A fatal exit occurs when a program encounters a critical error like invalid memory access and the program is forcefully terminated\"}, {\"choiceId\": \"c\", \"text\": \"Normal exit\", \"correct\": false, \"explanation\": \"Normal exit means the process finished as intended\"}, {\"choiceId\": \"d\", \"text\": \"Terminated by another process\", \"correct\": false, \"explanation\": \"Termination by another process is a different termination scenario\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"A reference to non-existing memory is a fatal error that leads to termination.\"}",
            "$id": "6774464500261774b195",
            "$createdAt": "2024-12-31T19:30:15.379+00:00",
            "$updatedAt": "2024-12-31T19:30:15.379+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is asynchronous in message communication?",
            "topic": "Message Communication",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Blocking send\", \"correct\": false, \"explanation\": \"Blocking send means the sender is blocked until the message is sent, which is synchronous.\"}, {\"choiceId\": \"b\", \"text\": \"Blocking receive\", \"correct\": false, \"explanation\": \"Blocking receive means the receiver is blocked until a message is received, which is synchronous.\"}, {\"choiceId\": \"c\", \"text\": \"Direct message\", \"correct\": false, \"explanation\": \"Direct message can be implemented in both synchronous and asynchronous ways.\"}, {\"choiceId\": \"d\", \"text\": \"Non-block receive\", \"correct\": true, \"explanation\": \"Non-blocking receive means the receiver does not wait for a message to be available, making it asynchronous.\"}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": \"In non-blocking receive, the receiver does not wait for a message. It can check if a message is available without being blocked. This is the essence of asynchronous communication.\"}",
            "$id": "6774464e003a2abec8c1",
            "$createdAt": "2024-12-31T19:30:23.609+00:00",
            "$updatedAt": "2024-12-31T19:30:23.609+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Consider the following fragment of C++ code:\n\nconst int x = 8;\nconst int y = 16;\nif(x > y)\n{\n    int z = x + y;\n}\n\nFor codes like the above one, which technique of code optimization is appropriate?",
            "topic": "Code Optimization",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Arithmetic simplification\", \"correct\": false, \"explanation\": \"Arithmetic simplification is not applicable to this case since there are no arithmetic calculations that can be simplified during compilation.\"}, {\"choiceId\": \"b\", \"text\": \"Compile time evaluation\", \"correct\": true, \"explanation\": \"The values of 'x' and 'y' are known at compile time and the condition 'x > y' (8 > 16) can be evaluated during compile time. The if statement code block will never be executed because the condition is always false\"}, {\"choiceId\": \"c\", \"text\": \"Code motion\", \"correct\": false, \"explanation\": \"Code motion is about moving code outside of a loop, which does not apply in this case.\"}, {\"choiceId\": \"d\", \"text\": \"Dead code elimination\", \"correct\": false, \"explanation\": \"While the conditional block is never executed due to the condition, dead code elimination would not be the appropriate technique as the block itself is valid code, although it will never be used. Compile time evaluation is the most fitting optimization here\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Since x and y are constants the compiler can evaluate the if condition at compile time and it can determine that it will never evaluate to true. This leads to not generating code related to that conditional block\"}",
            "$id": "6774465700266287d51d",
            "$createdAt": "2024-12-31T19:30:32.718+00:00",
            "$updatedAt": "2024-12-31T19:30:32.718+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is true about functions in JavaScript?",
            "topic": "JavaScript Functions",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Function names can begin with digits\", \"correct\": false, \"explanation\": \"Function names in JavaScript cannot begin with digits.\"}, {\"choiceId\": \"b\", \"text\": \"There is no limit to the number of function parameters that a function may contain\", \"correct\": true, \"explanation\": \"JavaScript functions can accept any number of parameters, limited only by available system resources.\"}, {\"choiceId\": \"c\", \"text\": \"Function names can contain spaces\", \"correct\": false, \"explanation\": \"Function names in JavaScript cannot contain spaces.\"}, {\"choiceId\": \"d\", \"text\": \"Function names are not case-sensitive\", \"correct\": false, \"explanation\": \"Function names in JavaScript are case-sensitive.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"JavaScript functions can accept any number of parameters.\"}",
            "$id": "6774465e0005709e4bfb",
            "$createdAt": "2024-12-31T19:30:39.709+00:00",
            "$updatedAt": "2024-12-31T19:30:39.709+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which statement is true about pop() operation of Stack data structures?",
            "topic": "Stack Data Structures",
            "difficultyLevel": "Not Specified",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"pop() inserts new element at the middle of stack\", \"correct\": false, \"explanation\": null}, {\"choiceId\": \"b\", \"text\": \"pop() returns the end/top element but it doesn't delete that element\", \"correct\": false, \"explanation\": null}, {\"choiceId\": \"c\", \"text\": \"pop() removes the end/top element from stack\", \"correct\": true, \"explanation\": null}, {\"choiceId\": \"d\", \"text\": \"pop() inserts new element at the beginning/bottom of stack\", \"correct\": false, \"explanation\": null}]",
            "correctAnswer": "{\"choiceId\": \"c\", \"reason\": \"The pop() operation in stack data structures removes the element that is at the top of the stack.\"}",
            "$id": "677446650005003e8eae",
            "$createdAt": "2024-12-31T19:30:47.503+00:00",
            "$updatedAt": "2024-12-31T19:30:47.503+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "In a tree data structure, if a node has no parent node, then the node is _______.",
            "topic": "Tree Data Structure",
            "difficultyLevel": "Easy",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"External node\", \"correct\": false, \"explanation\": \"External nodes are leaf nodes which have no children, but they can have parent nodes.\"}, {\"choiceId\": \"b\", \"text\": \"Root node\", \"correct\": true, \"explanation\": \"The root node is the topmost node in a tree and by definition has no parent node.\"}, {\"choiceId\": \"c\", \"text\": \"Internal node\", \"correct\": false, \"explanation\": \"Internal nodes are nodes which have at least one child, and must have a parent.\"}, {\"choiceId\": \"d\", \"text\": \"Parent node\", \"correct\": false, \"explanation\": \"A parent node is a node that has children, and must have its own parent (except for the root node).\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"The root node is the only node in a tree that does not have a parent.\"}",
            "$id": "6774466e00328d243b76",
            "$createdAt": "2024-12-31T19:30:55.998+00:00",
            "$updatedAt": "2024-12-31T19:30:55.998+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Suppose you have received a message from your friend but the message is scrambled for the sake of security. Your friend has used a program to encode messages into scrambled text. In order to read the message which program would you use?",
            "topic": "Cryptography",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Secret key\", \"correct\": false, \"explanation\": \"A secret key is a piece of data used for encryption and decryption, not a program itself.\"}, {\"choiceId\": \"b\", \"text\": \"Decryption program\", \"correct\": true, \"explanation\": \"A decryption program is used to convert encrypted text back into readable plain text.\"}, {\"choiceId\": \"c\", \"text\": \"Encryption program\", \"correct\": false, \"explanation\": \"An encryption program is used to scramble data, not unscramble it.\"}, {\"choiceId\": \"d\", \"text\": \"Ciphertext\", \"correct\": false, \"explanation\": \"Ciphertext is the scrambled text itself, not a program for reading it.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"To read an encoded message, a decryption program is needed to reverse the encoding process and transform it back into readable text.\"}",
            "$id": "67744676003a94f057b6",
            "$createdAt": "2024-12-31T19:31:03.869+00:00",
            "$updatedAt": "2024-12-31T19:31:03.869+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which asymptotic notation describes average case analysis?",
            "topic": "Algorithm Analysis",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"f(n) = Big-Oh\", \"correct\": false, \"explanation\": \"Big-Oh describes the upper bound of the algorithm's growth, not average case.\"}, {\"choiceId\": \"b\", \"text\": \"f(n) = \\u03a9(Big omega)\", \"correct\": false, \"explanation\": \"Big-Omega describes the lower bound of the algorithm's growth.\"}, {\"choiceId\": \"c\", \"text\": \"f(n) = little-\\u03c9( little omega)\", \"correct\": false, \"explanation\": \"Little-omega represents the tight lower bound, not the average case\"}, {\"choiceId\": \"d\", \"text\": \"f(n) = \\u03b8 (theta)\", \"correct\": true, \"explanation\": \"Theta provides the tight bound of the function, thus it describes the average case.\"}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": \"Theta notation (\\u0398) describes the average case complexity of an algorithm as it provides both the upper and lower bounds which makes it the most appropriate description of the function's growth in the average case\"}",
            "$id": "6774467e002dc2f546de",
            "$createdAt": "2024-12-31T19:31:12.061+00:00",
            "$updatedAt": "2024-12-31T19:31:12.061+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is not correct about transaction failure?",
            "topic": "Transaction Failure",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Concurrency control enforcement avoids transaction failure\", \"correct\": false, \"explanation\": \"Concurrency control helps to prevent transaction failures due to conflicts but can't eliminate all causes of failure\"}, {\"choiceId\": \"b\", \"text\": \"Transactions fail if logical errors are detected\", \"correct\": true, \"explanation\": \"Logical errors can cause transactions to fail\"}, {\"choiceId\": \"c\", \"text\": \"Transactions fail if disk blocks lose their data\", \"correct\": true, \"explanation\": \"Loss of data in disk blocks can cause transactions to fail\"}, {\"choiceId\": \"d\", \"text\": \"Catastrophes can be cause of transaction failure\", \"correct\": true, \"explanation\": \"Catastrophes such as power outages, natural disasters etc. can cause transaction failures\"}]",
            "correctAnswer": "{\"choiceId\": \"a\", \"reason\": \"Concurrency control minimizes conflicts that could lead to failure, but it doesn't guarantee that transaction failures will be completely avoided. Other failures may still happen due to logical error and data loss.\"}",
            "$id": "67744686000583b3aac7",
            "$createdAt": "2024-12-31T19:31:20.037+00:00",
            "$updatedAt": "2024-12-31T19:31:20.037+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Given the schemas:BOOK (Book_id, Title, Publisher_name) BOOK_AUTHOR (Book_id, Author_name) PUBLISHER (Name, Address, Phone) Which one of the following SQL is correct to delete the publisher named as 'XWZ' from the PUBLISHER table",
            "topic": "Database SQL",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"DELETE FROM PUBLISHER WHERE Address = 'XWZ'\", \"correct\": false, \"explanation\": \"This SQL statement tries to delete the publisher based on the 'Address' column, but we need to delete based on 'Name'.\"}, {\"choiceId\": \"b\", \"text\": \"DELETE FROM PUBLISHER WHERE Name = 'XWZ'\", \"correct\": true, \"explanation\": \"This SQL statement correctly targets the 'Name' column in the 'PUBLISHER' table to delete the row where name is 'XWZ'.\"}, {\"choiceId\": \"c\", \"text\": \"DELETE FROM BOOK_AUTHOR WHERE Address = 'XWZ'\", \"correct\": false, \"explanation\": \"This SQL statement is targeting a wrong table, we need to delete from PUBLISHER table and also the condition is incorrect as we need to filter by Name.\"}, {\"choiceId\": \"d\", \"text\": \"DELETE FROM BOOK WHERE Name = 'XWZ'\", \"correct\": false, \"explanation\": \"This SQL statement is targeting a wrong table, we need to delete from PUBLISHER table.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"The correct way to delete a publisher named 'XWZ' from the PUBLISHER table is using the 'Name' attribute in the WHERE clause.\"}",
            "$id": "6774468f003118562088",
            "$createdAt": "2024-12-31T19:31:28.977+00:00",
            "$updatedAt": "2024-12-31T19:31:28.977+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is not an example of scripting languages?",
            "topic": "Programming Languages",
            "difficultyLevel": "Easy",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Python\", \"correct\": false, \"explanation\": \"Python is a widely used scripting language.\"}, {\"choiceId\": \"b\", \"text\": \"Perl\", \"correct\": false, \"explanation\": \"Perl is also a well known scripting language.\"}, {\"choiceId\": \"c\", \"text\": \"C++\", \"correct\": true, \"explanation\": \"C++ is a compiled language, not a scripting language.\"}, {\"choiceId\": \"d\", \"text\": \"PHP\", \"correct\": false, \"explanation\": \"PHP is commonly used as a scripting language, especially for web development.\"}]",
            "correctAnswer": "{\"choiceId\": \"c\", \"reason\": \"C++ is a compiled programming language, and it is not primarily used as a scripting language.\"}",
            "$id": "677446970009d4db8e51",
            "$createdAt": "2024-12-31T19:31:37.051+00:00",
            "$updatedAt": "2024-12-31T19:31:37.051+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is different from the other based on its role in computer network?",
            "topic": "Computer Networks",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Routers\", \"correct\": false, \"explanation\": \"Routers are networking devices used to forward data packets between networks.\"}, {\"choiceId\": \"b\", \"text\": \"Network printer\", \"correct\": true, \"explanation\": \"A network printer is an end device, not a networking device like the others.\"}, {\"choiceId\": \"c\", \"text\": \"Hubs\", \"correct\": false, \"explanation\": \"Hubs are networking devices that connect multiple devices in a network (though less common than switches now).\"}, {\"choiceId\": \"d\", \"text\": \"Wireless access point\", \"correct\": false, \"explanation\": \"Wireless access points provide network access via Wi-Fi.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Routers, hubs, and wireless access points are all networking devices, while a network printer is an end device that uses the network.\"}",
            "$id": "6774469f00210625fb3f",
            "$createdAt": "2024-12-31T19:31:45.056+00:00",
            "$updatedAt": "2024-12-31T19:31:45.056+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following is false about project planning stage?",
            "topic": "Project Planning",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Project planning is a one-time task in software development life cycle\", \"correct\": false, \"explanation\": \"Project planning is an iterative process, not a one-time task.\"}, {\"choiceId\": \"b\", \"text\": \"Risk analysis is done during project planning\", \"correct\": true, \"explanation\": \"Risk analysis is a crucial part of project planning.\"}, {\"choiceId\": \"c\", \"text\": \"Cost estimation is done during project planning\", \"correct\": true, \"explanation\": \"Cost estimation is a core activity in project planning.\"}, {\"choiceId\": \"d\", \"text\": \"Preparing time schedule is done during project planning\", \"correct\": true, \"explanation\": \"Creating a time schedule is essential during project planning.\"}]",
            "correctAnswer": "{\"choiceId\": \"a\", \"reason\": \"Project planning is not a one-time activity. It's an ongoing and iterative process throughout the software development life cycle.\"}",
            "$id": "677446a8003da130cfa7",
            "$createdAt": "2024-12-31T19:31:53.726+00:00",
            "$updatedAt": "2024-12-31T19:31:53.726+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "What will be the output of the following JavaScript statement? Math.sqrt(36)",
            "topic": "JavaScript Math",
            "difficultyLevel": "Easy",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"1\", \"correct\": false, \"explanation\": \"The square root of 36 is not 1.\"}, {\"choiceId\": \"b\", \"text\": \"6\", \"correct\": true, \"explanation\": \"The square root of 36 is 6.\"}, {\"choiceId\": \"c\", \"text\": \"36\", \"correct\": false, \"explanation\": \"The square root of 36 is not 36.\"}, {\"choiceId\": \"d\", \"text\": \"30\", \"correct\": false, \"explanation\": \"The square root of 36 is not 30.\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"Math.sqrt() function returns the square root of a given number. The square root of 36 is 6.\"}",
            "$id": "677446b00022bb65137f",
            "$createdAt": "2024-12-31T19:32:01.696+00:00",
            "$updatedAt": "2024-12-31T19:32:01.696+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "_________ is a network architecture characteristics that states a network can expand quickly to address needs of new users and application without having impact on the services delivered to existing users.",
            "topic": "Network Architecture",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Scalability\", \"correct\": true, \"explanation\": \"Scalability refers to the ability of a network to expand and handle increased workloads without affecting existing services.\"}, {\"choiceId\": \"b\", \"text\": \"Fault tolerance\", \"correct\": false, \"explanation\": \"Fault tolerance is about the ability of a system to continue operating in the event of a failure, not network expansion.\"}, {\"choiceId\": \"c\", \"text\": \"Security\", \"correct\": false, \"explanation\": \"Security is about protecting network resources from unauthorized access, not network expansion.\"}, {\"choiceId\": \"d\", \"text\": \"Quality of service\", \"correct\": false, \"explanation\": \"Quality of service is about prioritizing network traffic and ensuring consistent performance, not network expansion.\"}]",
            "correctAnswer": "{\"choiceId\": \"a\", \"reason\": \"Scalability is the network characteristic that allows for expansion to meet new demands without impacting current users.\"}",
            "$id": "677446b800271ab05329",
            "$createdAt": "2024-12-31T19:32:09.787+00:00",
            "$updatedAt": "2024-12-31T19:32:09.787+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "_________ is a network architecture characteristics that states a network can expand quickly to address needs of new users and application without having impact on the services delivered to existing users.",
            "topic": "Network Architecture",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Scalability\", \"correct\": true, \"explanation\": \"Scalability refers to a network's ability to grow and adapt to handle increased demand.\"}, {\"choiceId\": \"b\", \"text\": \"Fault tolerance\", \"correct\": false, \"explanation\": \"Fault tolerance refers to the network's ability to continue operating despite failures.\"}, {\"choiceId\": \"c\", \"text\": \"Security\", \"correct\": false, \"explanation\": \"Security is about protecting the network from unauthorized access and threats.\"}, {\"choiceId\": \"d\", \"text\": \"Quality of service\", \"correct\": false, \"explanation\": \"Quality of service refers to the network's ability to prioritize certain types of traffic.\"}]",
            "correctAnswer": "{\"choiceId\": \"a\", \"reason\": \"Scalability is the network characteristic that enables quick expansion to handle new users and applications without impacting existing services.\"}",
            "$id": "677446c000020fd4c725",
            "$createdAt": "2024-12-31T19:32:17.898+00:00",
            "$updatedAt": "2024-12-31T19:32:17.898+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Advancement of operating system is closely tied to computer architectures, therefore, has passed through different generations. Which one of the following generation and advancement is wrongly coupled?",
            "topic": "Operating System Generations",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Fourth generation -> real time systems\", \"correct\": false, \"explanation\": \"Real-time systems became more prominent during the fourth generation.\"}, {\"choiceId\": \"b\", \"text\": \"Third generation -> batch system\", \"correct\": false, \"explanation\": \"Batch systems were indeed a feature of third generation operating systems.\"}, {\"choiceId\": \"c\", \"text\": \"First generation-> single user\", \"correct\": false, \"explanation\": \"First generation computers were typically single-user systems.\"}, {\"choiceId\": \"d\", \"text\": \"Second generation -> multiprogramming\", \"correct\": true, \"explanation\": \"Multiprogramming was a characteristic of the third generation, not second. The second generation was still primarily for batch processing.\"}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": \"Multiprogramming started to get popular in the third generation, not second. Second generation systems were more focused on batch processing.\"}",
            "$id": "677446c8002e3f0a375a",
            "$createdAt": "2024-12-31T19:32:26.476+00:00",
            "$updatedAt": "2024-12-31T19:32:26.476+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "_________ is set of attributes that can be seen by a program and can have direct impact on the logical execution of a program.",
            "topic": "Computer Science",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Arrangement\", \"correct\": false, \"explanation\": null}, {\"choiceId\": \"b\", \"text\": \"Architecture\", \"correct\": false, \"explanation\": null}, {\"choiceId\": \"c\", \"text\": \"Organization\", \"correct\": false, \"explanation\": null}, {\"choiceId\": \"d\", \"text\": \"Flow control\", \"correct\": true, \"explanation\": null}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": null}",
            "$id": "677446d0003b832c7f97",
            "$createdAt": "2024-12-31T19:32:34.080+00:00",
            "$updatedAt": "2024-12-31T19:32:34.080+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which one of the following algorithms can be used to extract Minimum Spanning Tree from an input graph?",
            "topic": "Graph Algorithms",
            "difficultyLevel": "Medium",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"Dijkstra's algorithm\", \"correct\": false, \"explanation\": \"Dijkstra's algorithm is used to find the shortest paths between nodes in a graph, not for finding minimum spanning trees.\"}, {\"choiceId\": \"b\", \"text\": \"Merge sort algorithm\", \"correct\": false, \"explanation\": \"Merge sort is a sorting algorithm, not related to finding minimum spanning trees.\"}, {\"choiceId\": \"c\", \"text\": \"Huffman encoding algorithm\", \"correct\": false, \"explanation\": \"Huffman encoding is used for data compression, not for finding minimum spanning trees.\"}, {\"choiceId\": \"d\", \"text\": \"Prim's algorithm\", \"correct\": true, \"explanation\": \"Prim's algorithm is a greedy algorithm specifically designed to find the minimum spanning tree in a weighted graph.\"}]",
            "correctAnswer": "{\"choiceId\": \"d\", \"reason\": \"Prim's algorithm is a well-known algorithm for finding the minimum spanning tree of a connected, weighted, and undirected graph.\"}",
            "$id": "677446d80028c291b03e",
            "$createdAt": "2024-12-31T19:32:42.626+00:00",
            "$updatedAt": "2024-12-31T19:32:42.626+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Look at the following PHP line: $list = array(20, 12, 23, 19, 18); What is the index of data value 19?",
            "topic": "PHP Arrays",
            "difficultyLevel": "Easy",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"3\", \"correct\": true, \"explanation\": \"In PHP arrays, indexing starts from 0. The value 19 is at the 4th position, which has the index 3.\"}, {\"choiceId\": \"b\", \"text\": \"2\", \"correct\": false, \"explanation\": \"The value 23 is at index 2, not the value 19.\"}, {\"choiceId\": \"c\", \"text\": \"0\", \"correct\": false, \"explanation\": \"The value 20 is at index 0, not the value 19.\"}, {\"choiceId\": \"d\", \"text\": \"1\", \"correct\": false, \"explanation\": \"The value 12 is at index 1, not the value 19.\"}]",
            "correctAnswer": "{\"choiceId\": \"a\", \"reason\": \"Array indexes in PHP start at 0. The value 19 is the fourth element, so it has index 3.\"}",
            "$id": "677446e10007e39f64aa",
            "$createdAt": "2024-12-31T19:32:51.348+00:00",
            "$updatedAt": "2024-12-31T19:32:51.348+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        },
        {
            "questionText": "Which quantifier can be used for some portion of the universe?",
            "topic": "Quantifiers",
            "difficultyLevel": "Unknown",
            "choices": "[{\"choiceId\": \"a\", \"text\": \"\\u2192\", \"correct\": false, \"explanation\": \"This is the implication symbol, not a quantifier.\"}, {\"choiceId\": \"b\", \"text\": \"\\u2203\", \"correct\": true, \"explanation\": \"The existential quantifier (\\u2203) means 'there exists' or 'for some'.\"}, {\"choiceId\": \"c\", \"text\": \"\\u2200\", \"correct\": false, \"explanation\": \"The universal quantifier (\\u2200) means 'for all', not for 'some'.\"}, {\"choiceId\": \"d\", \"text\": \"^\", \"correct\": false, \"explanation\": \"This symbol is used in logical conjunction and not used for quantification\"}]",
            "correctAnswer": "{\"choiceId\": \"b\", \"reason\": \"The existential quantifier (\\u2203) represents 'there exists' or 'for some,' which is used to denote a portion of the universe\"}",
            "$id": "677446e900393d179086",
            "$createdAt": "2024-12-31T19:32:58.993+00:00",
            "$updatedAt": "2024-12-31T19:32:58.993+00:00",
            "$permissions": [],
            "$databaseId": "67742c2800074454d171",
            "$collectionId": "67742c2c00253ef3258a"
        }
    ]
}